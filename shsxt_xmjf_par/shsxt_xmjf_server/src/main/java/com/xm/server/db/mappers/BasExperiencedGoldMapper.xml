<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xm.server.db.dao.BasExperiencedGoldMapper">
  <resultMap id="BaseResultMap" type="com.xm.api.po.BasExperiencedGold">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="gold_name" jdbcType="VARCHAR" property="goldName" />
    <result column="way" jdbcType="VARCHAR" property="way" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="useful_life" jdbcType="INTEGER" property="usefulLife" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="expired_time" jdbcType="TIMESTAMP" property="expiredTime" />
    <result column="use_time" jdbcType="TIMESTAMP" property="useTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="addtime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="addip" jdbcType="VARCHAR" property="addip" />
    <result column="invest_id" jdbcType="INTEGER" property="investId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, gold_name, way, amount, useful_life, rate, expired_time, use_time, status, 
    addtime, addip, invest_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bas_experienced_gold
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bas_experienced_gold
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xm.api.po.BasExperiencedGold">
    insert into bas_experienced_gold (id, user_id, gold_name, 
      way, amount, useful_life, 
      rate, expired_time, use_time, 
      status, addtime, addip, 
      invest_id)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{goldName,jdbcType=VARCHAR}, 
      #{way,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{usefulLife,jdbcType=INTEGER}, 
      #{rate,jdbcType=DECIMAL}, #{expiredTime,jdbcType=TIMESTAMP}, #{useTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{addtime,jdbcType=TIMESTAMP}, #{addip,jdbcType=VARCHAR}, 
      #{investId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xm.api.po.BasExperiencedGold">
    insert into bas_experienced_gold
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="goldName != null">
        gold_name,
      </if>
      <if test="way != null">
        way,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="usefulLife != null">
        useful_life,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="expiredTime != null">
        expired_time,
      </if>
      <if test="useTime != null">
        use_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="addtime != null">
        addtime,
      </if>
      <if test="addip != null">
        addip,
      </if>
      <if test="investId != null">
        invest_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goldName != null">
        #{goldName,jdbcType=VARCHAR},
      </if>
      <if test="way != null">
        #{way,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="usefulLife != null">
        #{usefulLife,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="expiredTime != null">
        #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="useTime != null">
        #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="addip != null">
        #{addip,jdbcType=VARCHAR},
      </if>
      <if test="investId != null">
        #{investId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xm.api.po.BasExperiencedGold">
    update bas_experienced_gold
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goldName != null">
        gold_name = #{goldName,jdbcType=VARCHAR},
      </if>
      <if test="way != null">
        way = #{way,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="usefulLife != null">
        useful_life = #{usefulLife,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="expiredTime != null">
        expired_time = #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="useTime != null">
        use_time = #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="addip != null">
        addip = #{addip,jdbcType=VARCHAR},
      </if>
      <if test="investId != null">
        invest_id = #{investId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xm.api.po.BasExperiencedGold">
    update bas_experienced_gold
    set user_id = #{userId,jdbcType=INTEGER},
      gold_name = #{goldName,jdbcType=VARCHAR},
      way = #{way,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      useful_life = #{usefulLife,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DECIMAL},
      expired_time = #{expiredTime,jdbcType=TIMESTAMP},
      use_time = #{useTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      addip = #{addip,jdbcType=VARCHAR},
      invest_id = #{investId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>